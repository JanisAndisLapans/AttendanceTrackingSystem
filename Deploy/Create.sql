-- Generated by Oracle SQL Developer Data Modeler 21.4.1.349.1605
--   at:        2024-03-02 10:44:03 EET
--   site:      Oracle Database 21c
--   type:      Oracle Database 21c



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE attendance (
    id                NUMBER NOT NULL,
    skipreason        NVARCHAR2(2000),
    student_id        INTEGER NOT NULL,
    lecture_id        NUMBER NOT NULL,
    attendance_status INTEGER NOT NULL
);

ALTER TABLE attendance ADD CONSTRAINT attendance_pk PRIMARY KEY ( id );

CREATE TABLE attendance_file (
    id            INTEGER NOT NULL,
    file_name     NVARCHAR2(256) NOT NULL,
    file_data     BLOB NOT NULL,
    attendance_id NUMBER NOT NULL
);

CREATE TABLE attendance_status (
    id   INTEGER NOT NULL,
    name NVARCHAR2(200) NOT NULL
);

ALTER TABLE attendance_status ADD CONSTRAINT attendance_status_pk PRIMARY KEY ( id );

ALTER TABLE attendance_status ADD CONSTRAINT attendance_status__unv1 UNIQUE ( name );

CREATE TABLE course (
    id                 INTEGER NOT NULL,
    name               NVARCHAR2(200) NOT NULL,
    register_minutes   INTEGER NOT NULL,
    minimum_attendance INTEGER,
    lecturer_id        INTEGER NOT NULL
);

COMMENT ON COLUMN course.register_minutes IS
    'Mintes no sakuma, kuras var registret apmeklejumu';

COMMENT ON COLUMN course.minimum_attendance IS
    'Procents minim?li apmekl?to lekciju';

ALTER TABLE course ADD CONSTRAINT courses_pk PRIMARY KEY ( id );

CREATE TABLE error_log (
    id         INTEGER NOT NULL,
    timestamp  DATE NOT NULL,
    procedure  VARCHAR2(200) NOT NULL,
    stacktrace VARCHAR2(200) NOT NULL,
    user_id    INTEGER NOT NULL
);

ALTER TABLE error_log ADD CONSTRAINT error_log_pk PRIMARY KEY ( id );

CREATE TABLE lecture (
    id             NUMBER NOT NULL,
    starttime      DATE NOT NULL,
    endtime        DATE NOT NULL,
    "Comment"      VARCHAR2(2000),
    course_id      INTEGER NOT NULL,
    mandatory      INTEGER NOT NULL,
    attendancecode VARCHAR2(8) NOT NULL,
    name           NVARCHAR2(200),
    semester_id    NUMBER NOT NULL
);

ALTER TABLE lecture ADD CHECK ( mandatory BETWEEN 0 AND 1 );

COMMENT ON COLUMN lecture.mandatory IS
    '0 - neobligata lekcija, 1 - obligata lekcija';

ALTER TABLE lecture ADD CONSTRAINT lecture_pk PRIMARY KEY ( id );

CREATE TABLE semester (
    id     NUMBER NOT NULL,
    year   INTEGER NOT NULL,
    season INTEGER NOT NULL
);

COMMENT ON COLUMN semester.season IS
    '1 - rudens, 2 - pavasara';

ALTER TABLE semester ADD CONSTRAINT semester_pk PRIMARY KEY ( id );

ALTER TABLE semester ADD CONSTRAINT semester__un UNIQUE ( year,
                                                          season );

CREATE TABLE student_course (
    id                         INTEGER NOT NULL,
    user_id                    INTEGER NOT NULL,
    attendance_statistics_file CLOB,
    course_id                  INTEGER NOT NULL
);

ALTER TABLE student_course
    ADD CONSTRAINT student_coursev1_pk PRIMARY KEY ( user_id,
                                                     id,
                                                     course_id );

CREATE TABLE "user" (
    id                     INTEGER NOT NULL,
    username               VARCHAR2(200) NOT NULL,
    password               VARCHAR2(256) NOT NULL,
    email                  VARCHAR2(200) NOT NULL,
    first_name             NVARCHAR2(200) NOT NULL,
    last_name              NVARCHAR2(200) NOT NULL,
    student_code           VARCHAR2(20) NOT NULL,
    warn_unattended        INTEGER NOT NULL,
    send_lecture_statistic INTEGER NOT NULL,
    send_end_statistic     INTEGER,
    user_type              INTEGER NOT NULL,
    first_login            INTEGER NOT NULL
);

ALTER TABLE "user" ADD CHECK ( warn_unattended BETWEEN 0 AND 1 );

ALTER TABLE "user" ADD CHECK ( send_lecture_statistic BETWEEN 0 AND 1 );

ALTER TABLE "user" ADD CHECK ( send_end_statistic BETWEEN 0 AND 1 );

COMMENT ON COLUMN "user".warn_unattended IS
    'Statistika par manis docetajiem kursiem: 1 - nesutit, 2 - sutit tikai kopsavilkumu semestra pedejas lekcijas beigas, 3 - sutit kopsavilkumu un atseviski par katru lekciju pec lekcijas
Sutit epastu par manis kavetu lekciju - 1, 0 - nesutit';

COMMENT ON COLUMN "user".send_lecture_statistic IS
    '1 - Sutit epasta statistiku par manis doceto kursu apmekletibu pec katras lekcijas , 0 - nesutit';

COMMENT ON COLUMN "user".send_end_statistic IS
    '1 - Sutit epasta statistiku par manis doceto kursu apmekletibu pec semestra pedejas lekcijas kursa , 0 - nesutit';

CREATE INDEX user__idx ON
    "user" (
        username
    ASC );

ALTER TABLE "user" ADD CONSTRAINT user_pk PRIMARY KEY ( id );

CREATE TABLE user_type (
    id   INTEGER NOT NULL,
    name NVARCHAR2(200) NOT NULL
);

ALTER TABLE user_type ADD CONSTRAINT user_type_pk PRIMARY KEY ( id );

ALTER TABLE user_type ADD CONSTRAINT user_type_name_un UNIQUE ( name );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_attendance_status_fk FOREIGN KEY ( attendance_status )
        REFERENCES attendance_status ( id );

ALTER TABLE attendance_file
    ADD CONSTRAINT attendance_file_attendance_fk FOREIGN KEY ( attendance_id )
        REFERENCES attendance ( id );

ALTER TABLE attendance
    ADD CONSTRAINT attendance_lecture_fk FOREIGN KEY ( lecture_id )
        REFERENCES lecture ( id );

ALTER TABLE error_log
    ADD CONSTRAINT error_log_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( id );

ALTER TABLE lecture
    ADD CONSTRAINT lecture_course_fk FOREIGN KEY ( course_id )
        REFERENCES course ( id );

ALTER TABLE course
    ADD CONSTRAINT lecturer_fk FOREIGN KEY ( lecturer_id )
        REFERENCES "user" ( id );

ALTER TABLE lecture
    ADD CONSTRAINT lectures_semesters_fk FOREIGN KEY ( semester_id )
        REFERENCES semester ( id );

ALTER TABLE student_course
    ADD CONSTRAINT student_course_course_fk FOREIGN KEY ( course_id )
        REFERENCES course ( id );

ALTER TABLE student_course
    ADD CONSTRAINT student_course_user_fk FOREIGN KEY ( user_id )
        REFERENCES "user" ( id );

ALTER TABLE "user"
    ADD CONSTRAINT user_user_type_fk FOREIGN KEY ( user_type )
        REFERENCES user_type ( id );


CREATE SEQUENCE attendance_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE attendance_file_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE course_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE error_log_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
CREATE SEQUENCE lecture_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE semester_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
 CREATE SEQUENCE student_course_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
 
  CREATE SEQUENCE user_sq
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;
-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             1
-- ALTER TABLE                             25
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
